{"meta":{"title":"蒲山牧","subtitle":"工欲善其事，必先利其器！","description":"本站是Upsame的技术分享博客。内容涵盖生活故事、FPGA技术、Python、计算机网络、数学建模、Linux系统、高可用架构、中间件使用、系统监控等相关的研究与知识分享。","author":"Upsame","url":"https://upsame.coding.me","root":"/"},"pages":[{"title":"关于我","date":"2019-11-18T04:15:07.728Z","updated":"2019-11-18T04:15:07.728Z","comments":false,"path":"about/index.html","permalink":"https://upsame.coding.me/about/index.html","excerpt":"","text":"一个人的开始。"},{"title":"404 Not Found：该页无法显示","date":"2019-11-19T03:16:15.885Z","updated":"2019-11-19T03:16:15.885Z","comments":false,"path":"/404.html","permalink":"https://upsame.coding.me/404.html","excerpt":"","text":""},{"title":"分类","date":"2019-11-18T07:39:56.189Z","updated":"2019-11-17T08:36:49.240Z","comments":false,"path":"categories/index.html","permalink":"https://upsame.coding.me/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-11-17T08:36:49.240Z","updated":"2019-11-17T08:36:49.240Z","comments":true,"path":"links/index.html","permalink":"https://upsame.coding.me/links/index.html","excerpt":"","text":""},{"title":"书单","date":"2019-11-17T10:02:28.974Z","updated":"2019-11-17T08:36:49.239Z","comments":false,"path":"books/index.html","permalink":"https://upsame.coding.me/books/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-11-17T08:36:49.241Z","updated":"2019-11-17T08:36:49.241Z","comments":false,"path":"repository/index.html","permalink":"https://upsame.coding.me/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-11-17T08:36:49.241Z","updated":"2019-11-17T08:36:49.241Z","comments":false,"path":"tags/index.html","permalink":"https://upsame.coding.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"谷歌，被尘封的过去！","slug":"before/2019-08-04-google","date":"2019-11-18T10:46:19.082Z","updated":"2019-11-19T04:46:43.369Z","comments":true,"path":"2019/11/before/2019-08-04-google.html","link":"","permalink":"https://upsame.coding.me/2019/11/before/2019-08-04-google.html","excerpt":"为什么很难看到关于谷歌早期的文章？","text":"转载自：www.ityouknow.com 作者：纯洁的微笑 导语：这是一篇不知什么时候就会被“和谐”的文章！ 在写《关于Google发展史》文章的时候，笔者满以为就凭Google的名气，随手就能找到这家公司的各种资料。 但事实却是：你很容易就能找到Google上市以后的发展轨迹，却很少有关于Google创业之初的信息。 不管是网络，书店、还是图书馆，关于那段时光的信息，少的可怜。 在找资料的过程中，笔者一度猜测，做为世界上最大的搜索引擎，谷歌是不是刻意删除了所有“关于过去”的文章？ 随着查找一步步深入，渐渐的揭开了那段往事神秘的面纱。 1.网络狂潮下,一棵不起眼的种子随风飘摇 时光回到1995年，那个“信息爆炸”的网络时代。 传统的工业社会似乎正在被抛弃，互联网以无与伦比的生产效率，和惊人的迅速反应能力，吸引了股市以超乎寻常的热情拥抱这一新兴事物。 江湖风云起，四方英雄汇聚股市： 1995年7月，第一家网上书店亚马逊成立； 1995年8月，网景成为互联网行业第一家大规模上市公司，引发股市抢购狂潮； 1996年1月，由两名斯坦福大学生创立的索引网站“雅虎”成功上市。 各类网站如Infoseek、Lycos、Infoseek、Alta vista和Inktomi（伯克利大学研发）像雨后的小蘑菇，一个接一个的冒出了脑袋，争着抢着在互联网这块诱人的大蛋糕上分一块。 **微软在当时打遍天下没有对手，雅虎一跃成为网络新贵。**这些人成了美国成功人士的标榜，人们对眼前的一切津津乐道。 与此同时，1996年的春天，斯坦福计算机系的“比尔·盖茨大楼”开幕典礼上，拉里·佩奇和谢尔盖·布林正老实的坐在主席台下，听比尔·盖茨发表演讲。 没有人会知道，台下坐的这两个年轻人，将会在不远的未来，成为让微软与雅虎头疼不已的对手，而他们的武器，就是谷歌。 谢尔盖·布林(左) 拉里·佩奇(右) /网络 **拉里·佩奇对技术着有痴迷的热爱，**他在斯坦福大学“数字图书馆倡议”的项目中，研究如何更便捷的搜索到“计算机研究论文”。 **有点古灵精怪的谢尔盖·布林，**此时正与他的研究小组，专心研究data mining 技术，主要用于分析大量信息数据中，可能存在的倾向性与相互关系。 此时的雅虎，已经是像武林盟主一样的存在。 所有人都认为，雅虎已经在搜索引擎的技术上胜出，满足了人们对搜索的要求。 此时还是个学生的拉里·佩奇却不满意，他筹划了一个大部分人想都不敢想的伟大计划… 他找到谢尔盖·布林，分析网民到底需要什么样的信息，什么信息有用，什么是垃圾信息。 为了弄清楚这些问题，他们花费了大约一年的时间开发爬虫算法、下载大量Web网页、运用大量的复杂数学公式来解决以上问题。 这个公式集合就是著名的谷歌前身——PageRank，一种网页排名算法。 这种算法能够快速准确地判断网页和所查询内容之间的关联性，从而给出最接近用户需求的结果，同时这个算法可以巧妙的避开垃圾网站。 PageRank的试验从1997年初开始，经过了大半年的测试，在1997年9月15日，正式注册命名为：“Google.com”。 这时的谷歌已经初步成形，但在强者如林的网络世界里，这颗幼苗需要更精心的培育。 谷歌很快引起了斯坦福大学全校师生的兴趣。 当时搜索老大的雅虎与Alta vista在搜索结果上，经常会给出牛头不对马嘴的页面。 但当在谷歌上输入“足球”，显示在搜索结果首位的网页，和用户想查询的结果基本无差别。 谷歌的优势这时开始显现，仅在校园内，网站上的搜索量就以非常快的速度，达到了每天10000条。 **但拉里·佩奇与谢尔盖·布林面临一个严重问题：**长期运行的计算机部件，会经常出现故障。 为了解决这个问题，拉里·佩奇专门开发了一套复杂的平行处理系统：当一台计算机出现故障，另一台能即时替补，他还用魔术贴将服务器的各个部件固定在软木板上，方便拆卸。 这种看起来像手工作坊的操作，实际上却非常好用。 这样一来，Google已经完成了它的初始状态。不过拉里·佩奇与谢尔盖·布林并没有兴趣创立公司，对于热爱技术的他们来说，完成博士学业更为重要。 谢尔盖·布林(左) 拉里·佩奇(右) /网络 于是，两个年轻人开始寻找愿意买下谷歌搜索技术的公司。 那时正如日中天的雅虎，其创始人之一，同样来自斯坦福大学的大卫·费罗，拒绝了收购谷歌。 他认为谷歌提供的服务虽然可以对雅虎的索引目录进行补充，但在当时，搜索引擎这一概念，已经失去了吸引力，所有人的全部注意力都集中在了“门户网站”上。 随后AltaVista、Excite等等所有知名的公司均反应冷漠，那些高管认为这种**“高级搜索”不会有太大商业价值。** 几家新兴网络公司虽然表现出了兴趣，但拉里·佩奇与谢尔盖·布林认为他们出的价钱太低，不值得卖出谷歌。 拉里与谢尔盖，显然有着研究型学者共同的理想主义情怀：有人认真对待这个工作成果，并且愿意出高价拥有它，那么，他们才会将其卖掉。 但，没有人愿意这么做，于是他们只好对自己说：“那好吧，我们找不到那种人，那就自己来吧。” 他们决定自己为谷歌找一条出路。 2.似乎每个初创公司都应该在车库里… 那是互联网的狂热达到了巅峰的1998年，还是学生的拉里·佩奇与谢尔盖·布林，在四处寻找可用的资源。 他们用信用卡以15000美元的低价购买了一批硬盘，以乐高积木为基础制作机箱，放置在两人的宿舍。 但储存网络上的海量信息这显然不够，于是他们又从各个部门挪用电脑，把它们组装在一起，有SUN，IBM A / X等各式各样的计算机。 他们还拆下了斯坦福大学的服务器，巨大的流量导致整个斯坦福大学网络瘫痪，以至于在很长一段时间里，没人能登录斯坦福的任何一台计算机。 斯坦福大学大怒，要求他们离开。 但盛怒之后的斯坦福，又告诉他们：“如果你们不成功，可以回来完成博士学位。” 斯坦福大学/网络 此时，拉里与谢尔盖已经进行了三年的研究，拥有一个基础运营平台。 如果离开斯坦福的宿舍，他们需要一个地方，来放置这些存储数据的大量计算机，同时也需要筹集资金购买更多的计算机，来存储更多的信息。 两个年轻的小伙子通过朋友的朋友，以每个月1700美元，租下了苏珊·沃西基家一个车库、三个房间和两个浴室。（这位在英特尔工作的房东，在后来，成了谷歌产品管理副总裁。） 安置好工作地点，他们开始向身边的人寻求赞助资金。 苏珊·沃西基家的车库/网络 一位计算机系的教授大卫·谢瑞登，曾经与硅谷的企业家安迪·贝托尔海姆合伙创办过几家公司，身为工程师的安迪·贝赫托尔舍姆也是一位投资人。 在聚精会神的看完谷歌的演示后，安迪只问了拉里·佩奇与谢尔盖·布林一个问题：“你如何赚钱？” 拉里·佩奇与谢尔盖·布林当时并没有什么商业计划，只有一个想法：“我们将让赞助商为这些链接付费，当你点击一次链接，我们会收到五美分。” 安迪·贝赫托尔舍姆迅速的算了一笔帐，几天后便给“谷歌公司”开了一张10万美元的支票。 而这时，谷歌公司并没有成立。 于是，为了兑现这张支票，真正的谷歌公司在1998年9月7日，在车库中诞生了。 只是这时的谷歌，还是个不引人注意的“小不点”。 第一笔资金有了，他们所需的其他启动资金也很快到手。拿到钱的年轻人招募到五个同样对技术拥有热情的同伴，24小时的呆在车库中忙碌着… 从0到1已经实现，下面则要从1走到100。 3.两年轻人的商场第一战 1999年，拉里·佩奇与谢尔盖·布林发现，整个互联网信息搜索服务商，几乎完全抛弃了搜索服务，注意力都放在了网站张贴广告赚钱上面。 他们认为这是个极大的机遇：趁其他人忙于赚钱时，把Google的搜索结果做到更高效更准确。 但实施这一行动，需要在更大范围内试用PageRank，而手里的资金远远不够。这年春天，他俩开始寻求2500万美元的风投资金。 在当时，大多数硅谷公司都很难获得那么多的资金，起步只有一年的谷歌，在当时去找这样一笔钱，显然很难。 这时，拉里和谢尔盖引起了美国最大风险基金——红杉资本的迈克尔·莫瑞茨与KPCB约翰·杜尔这两家风投巨人的注意。 在业界，任何一家公司在试图建立自己品牌时，都会因与这两家资本投资中任意一家合伙，而信任度大增。 还有很多创业者能在这两家公司面前兜售一番都感到荣幸，但拉里和谢尔盖却拒绝了这两家公司。 由于风投资金的2500万美元，需要交出谷歌公司进20%的股权，而拉里和谢尔盖并不愿意谷歌被外来力量掌控，坚持要求两家分别投入1250万美元，以公司9%的股权作为回报，否则便寻找其他投资人。 这几乎毁了这笔交易。 两家公司当然不希望这种共同投资，况且再此之前，他们都从未遇见过，像拉里和谢尔盖这样拒绝他们钱的人。 雅虎的两位创始人，也在劝说红衫资本的莫瑞茨对谷歌进行投资。雅虎此时正忙于门户网站的功能，而谷歌可以用来强化他们的搜索引擎服务。 这场投资的谈判持续了一个月的时间。 三方都固执的坚持自己的态度，谁也不肯让步。 拉里和谢尔盖甚至给中间人打电话，明示如果风投不愿意同意这个方案，他们将寻找别的资本。 终于，在1999年6月7日，红杉资本与KPCB同意各投资1250万美元，各自持有约10%股份。 在面对这两个比他们强大的多的公司，拉里和谢尔盖以惊人的“固执”，保住了对公司的掌控权，拿到了2500万美元投资。 结果也证明，这是两个风险投资人的最精彩交易。 谷歌上市后，每家风险投资公司都发现，自己的股票价值大约高达30亿美元，这可能是有史以来最高的风险投资回报。 谢尔盖后来谈到这次交易时说：“我觉得我们当时谈了一个好价钱。它们（风投公司）认为要价太高，我们认为要价太低。天使投资人视（投资）为一种嗜好。风投公司将它作为生意来做，至少是当作一种竞赛。” 拥有技术力量，但在商业领域毫无经验，拉里和谢尔盖却一眼就看明白，硅谷的募资游戏的本质，从而谈到了一个合理的价格。 这是谢尔盖第一次发挥他的商业谈判天赋。 然而很快，互联网泡沫的崩溃，席卷了整个网络。 4.从灾难中意外成功 1999年的夏天，在谷歌公司正式成立后一年，拿到了投资的拉里和谢尔盖，终于拥有了属于谷歌的办公楼，位于山景城，他们将此地命名为Googleplex. 这时其网站日访问量已经达到400万，60余名员工，其中大部分是工程师，和一个推销搜索服务的营销团队。 从1999年到2000年，整个社会都沉浸在某种狂热的情绪中，互联网像一个巨大的金矿，被描绘成黄金乐土，人人信心百倍。 那些靠着精妙的设想，没有一分钱收入的网络公司，其股票价格却不断攀升。 2000年4月14日，纳斯达克突然灾难性大跌，网络经济的泡沫，开始破灭。无数网络新贵公司倒闭，那些网络精英还没弄清楚发生了什么，就被时代淹没。 股市的悲剧，却意外的为谷歌带来了巨大的用户： 如果一家网站想要盈利，就要在搜索结果中排名靠前，因此许多网站纷纷付钱买排名，雅虎在当时的这项收费是199美元。 当人们意识到自己搜索的结果，居然是网站花钱买来的时候，人们开始转而使用谷歌。 谷歌开始有了大量用户，但两位创始人一直反对将广告引入他们的网站。 但同时他们也意识到，如果没有丰厚的利润回报，也难逃倒下的命运。于是他们开始着手研发一套属于自己的广告系统。 6月26日，对于谷歌来说，是具有重大历史意义的一天。 雅虎将使用谷歌作为搜索引擎。从这一天开始，谷歌开始获得巨大的流量入口，打下了第一个通向成功的基础。 **12月，谷歌的第一套广告系统AdWords发布，这成为了谷歌的第一棵大摇钱树。**AdWords允许企业购买与搜索词相关的广告，有别于其他搜索引擎的是，谷歌的付费广告链接，在页面右侧有专门的区域。 AdWords这一系统的开发，不仅为谷歌建立了独有的“睡后收入”的赢利模式，也让谷歌安然度过了因互联网泡沫的破裂，而带来的剧烈风暴。 谷歌联合创始人拉里·佩奇与谢尔盖·布林，成为了科技行业中冉冉升起的新星。 无数科技公司失败了，谷歌却大获成功。 但是，此时的谷歌还很脆弱！ 5.技术狂人,怎样才能打造一个商业帝国 面对一个完全不熟悉的商业领域，谷歌需要从头去学会处理根本不熟悉的事务； 他们还需要更多的聪明人，一起完成一个商业帝国的构建。 2000年时，谷歌的准确高效，界面的简洁明快的特征，占据了搜索引擎市场25%的份额。 这时的谷歌内部，却像一个大学校园：.有着严格要求的工程师队伍，对技术创新的专注精神，可以带宠物上班，猫、狗、蜥蜴…“酷”、“创造”、“技术”是谷歌此时的灵魂。 但投资人，是最先嗅到风险的那个。 1999年，在谷歌的两位主要投资人，红衫资本和KPCB，强烈要求两位创始人聘请一位总经理。 但拉里·佩奇和谢尔盖·布林却不那么乐意。 他们对投资人的要求既不拒绝，但也不回应，忍无可忍的红衫资本的莫瑞茨大怒，甚至跳出来，威胁要撤出对谷歌的投资。 这事拖了大约一年的时间，直到拉里·佩奇和谢尔盖·布林两个人，去硅谷那些自己一直尊敬的公司拜访，看到了他们的管理方式后，才同意聘请总经理。 2001年，45岁的埃里克·E·施米特加入谷歌，出任CEO。 从此，谷歌进入了一个由埃里克带领、拉里·佩奇主管开发、谢尔盖·布林负责商业谈判的三人组合时代。 图源/网络 然而实际情况却是，45岁的埃里克，与没有一点商业经验，还带着学生气的两位创始人，领着没有明确发展发向的谷歌到处跑。 拉里·佩奇和谢尔盖·布林热爱几乎所有的创意项目，而埃里克不得不经常花费相当的力气，去把他们两个疯狂的创意与现实结实起来。 看在眼里急在心里的投资人KPCB的约翰·杜尔，只好请苹果董事会的成员坎贝尔，定期到谷歌，**“教会”埃里克如何管理像谷歌这样“酷酷”的公司，“指导”两位创始人明白一个“酷”企业，与充满“智慧”**的企业的差别… 以至于杜尔的合伙人赫斯特后来曾表示：是坎贝尔救了谷歌。 2001年完美的结束，谷歌的第一个利润报告达到700万美元！ 谷歌开始悄无声息地走上巅峰！ 6.当你忙着改变世界的时候,很难安静的坐着 如果要说，有哪一家科技能够切实颠覆现代互联网行业、变革现代生活方式，那无疑就是搜索巨头谷歌。 从1999年，到2003年，谷歌的收入是437115%的惊人增长，但依然默默无闻。 整个社会都在观望，等着IBM、微软、雅虎、亚马逊、戴尔，看谁先从不景气的网络经济中摆脱出来。 2004年8月19日，谷歌上市。 人们突然意识到，一个新的巨人正在崛起。一夜之间，谷歌成了“举足轻重”的公司，甚至成了网络新经济的代表。 此后谷歌的发展，就是屹立庞大的基石上，不断的向公众扔出前所未闻的创意，不断的扩展谷歌的能力，也不断的遭受来自各方面攻击与压力的过程。 ▌2005年2月8日：推出地图应用Maps ▌2006年1月27日：进入中国，收购YouTube 2006年顺风顺水的谷歌，突然被微软抛弃。 毫无征兆之下，微软的IE浏览器将默认引擎从谷歌改为自己的搜索，谷歌一夜之间失去了一个巨大的流量入口。Chrome项目启动。 ▌2008年9月2日：谷歌正式推出Chrome浏览器、推出安卓操作系统手机T-Mobile G1 / HTC Dream ▌2009年2月：安卓系统发布 ▌2010年3月22日：退出中国市场、深陷与甲骨文的法律纠纷、进军无人驾驶汽车领域 ▌2011年6月15日：正式推出Chrome操作系统、推出多语言社交网络Google+、收购摩托罗拉，埃里克辞去执行董事长一职，拉里·佩奇担任首席执行官。 ▌2012年6月：推出拓展现实眼镜Google Glass ▌2014年1月24日：正式收购人工智能实验室DeepMind ▌2015年8月10日：开启新公司Alphabet的重组工作 ▌2016年5月18日：推出智能助手、Pixel系列智能手机以及家用智能扬声器 ▌2018年7月18日：谷歌由于安卓垄断遭到欧盟51亿美元罚款、大范围的员工抗议 7.写在最后 当企业的创始人总像知名记者一样，时刻准备着就某一件事，来发表自己的意见时，谷歌的两位创始人却一直低调沉默，尽可能少的发表意见。 不经常露面的拉里·佩奇甚至被媒体指责：“你为何躲起来？” 但正是这种沉默贯穿了谷歌的前世今生。 保持沉默，让谷歌这个诞生在校园宿舍的“小东西”，在未引起巨头注意的情况下，成长为一个信息领域的巨无霸。 不管世界怎么闹腾，谷歌一直在做自己的事情。 一个成熟的公司，带来的都是固化的东西，和经过加工包装的价值观，个体既无法模仿，也无从批判学习。 一个公司最初的发展却可以向我们展示，那些被称为“天才”的人们，是怎样克服那些困境，一路杀出重围，走向成功之路。 聪明人懂得看现在，智慧的人，懂得看从前！ Ref：凤凰网科技、36Kr、《谷歌是如何运营的》、《谷歌是如何控制世界的》；图源自网络","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"漫画 |《程序员十二时辰》，居然是这样的！内容过于真实 ...","slug":"before/2019-08-09-12hour","date":"2019-11-18T10:46:19.082Z","updated":"2019-11-18T10:51:19.738Z","comments":true,"path":"2019/11/before/2019-08-09-12hour.html","link":"","permalink":"https://upsame.coding.me/2019/11/before/2019-08-09-12hour.html","excerpt":"不要太真实...","text":"转载自：www.ityouknow.com 作者：纯洁的微笑 漫画：法小四 据说程序员的一天是这样渡过… 7：00 开始新的一天 起床缓冲中，已经进行 ……6% 回想昨晚不该又 High 到 2 点 7：10 闹钟响到第 6 次的时候，终于鼓起勇气起床。 其实我也不想那么晚睡，但，只有凌晨以后的时间 我才觉得时间属于自己！ 7：40 地铁中 上班的心情比上坟还要沉重 每天在地铁就拼劲了一天的力气 哪怕你是一个96公斤的胖子，也可以被挤得双脚悬空。 住在燕郊的同事总是对我说： 上班不累，上下班累 我懂！ 9：01 公司打卡 仅仅迟到1分钟的痛，有谁能懂？ 据公司HR说，三次迟到就可以领取公司的特殊奖状… 我一直想鼓起勇气问问 HR 为什么领导可以 12 点以后才来… 9：10 开始办公 打开电脑，提示您有106条未读邮件 明明就坐在你的对面，偏偏要发个邮件来沟通 有可能怕背锅吧… 顺便打开博客园，瞅瞅今天又更了什么新技术。 10：00 项目开会 项目沟通会议，永远是一场PK大赛！ 董事长说你们研发都是一群高智商人群，1个月肯定就可以搞定 偷偷瞄了一眼，技术老大下意识的又摸了摸自己的秃头 原定1个小时的会议，又拖延了51分钟，精准卡到了饭点。 12：00 公司食堂 排队半小时，吃饭三分钟 三分钟吃饭时间，总能发现各种各样的惊喜（吓） 头发丝、洗锅细铁丝、环保材料、小动物… 食堂吃饭就是另一种野外生存锻炼。 12：40 公司附近遛弯 不小心又遇到了领导，每次遇到领导都不知道如何打招呼 “领导吃了吗”好像是废话 “领导去干嘛”我能管得着吗？ 正在犹豫之间，领导把头转向了另外一个方向，擦肩而过。 13：00 午休 各种鼾声此消彼长，一度有种进了民工房的错觉 有的喜欢趴着睡，有的喜欢仰着睡，有的喜欢脱掉鞋睡… 夏天，配上浓浓的脚臭和各种外卖的味道，刺激、酸爽！ 14：00 修改 Bug 中 终于可以好好改改 Bug 了 为了修改一个很深的 Bug，无意中在一个很老的组件包中，发现一段醒目的代码注释 突然有一种泪流满面的感动，兄弟诚不欺我 面对前任兄弟的真诚，对着代码注释，深情的拜了三拜。 16：30 沟通需求 新来了一个产品妹子 第 106 次来到我的身边，看来梁静茹又给了她一次勇气 努力镇压住心中的杀气，问道，这次又改什么？ 18：20 启动加班中 非研发部门，总是可以在下班十分钟之内撤退完毕，整齐如一 当办公司都走空的时候，才是程序员真正的 Coding 时间 当没有人打扰时，Coding 就是一种享受 有种改变世界的感觉 虽然有可能是一种错觉。 19：00 继续加班中 不在加班中爆发，就在加班中灭亡 995、996、997、711、007… 有的公司为了鼓励加班，设置很多变态的规定 17：30 下班 ，18：30 有班车，19：00 有工作餐，21：00 后打车报销 总有一个坑等着你 想想1.5-2H 的地铁，还不如再干两个小时吧… 每次回家坐在出租车上，看着窗外这座城市的繁华 却始终感觉自己是局外人 永远融不进去这个待了好多年的城市。 作为一名程序员 有几句知心话要对大家说： 每一个北漂人都不容易， 老板的情怀很重要，但自己的身体更重要。 没有听说哪个公司离开了一个程序员就倒闭了。 但，如果你的家庭没有了顶梁柱的你， 一切都垮了！ 有时候很多读者问我， 一线城市重要，还是二线城市重要？ 对我来讲和家人在一起最重要！ 程序员的生活不应该只有工作， 虽然工作有可能改变世界， 但最需要你改变的可能是你的家庭。 最近看新闻，有很多些程序员， 在工作中就突然倒下了， 有的只是意外， 有的却永远没有起来。 未来很远，只有打好地基，才能走得更稳！","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"互联网从此没有 BAT","slug":"before/2019-08-21-bat","date":"2019-11-18T10:46:19.082Z","updated":"2019-11-18T10:51:27.627Z","comments":true,"path":"2019/11/before/2019-08-21-bat.html","link":"","permalink":"https://upsame.coding.me/2019/11/before/2019-08-21-bat.html","excerpt":"ATMJDH已经在路上","text":"转载自：www.ityouknow.com 作者：纯洁的微笑 根据 Wind 数据截止2019年8月30日，中国十大互联网上市公司排名中，百度排名第 6 位市值 365 亿美元，阿里巴巴排名第一市值高达 4499 亿美元，腾讯排名第二市值 3951 亿美元。 1.最新梯队 排在第一的阿里巴巴和排在第二的腾讯市值几乎是百度的10倍，这里还没有算阿里巴巴未上市的蚂蚁金服，还有气势如牛的字节跳动，据报道字节跳动最后一轮估值高达 750 亿美元。 如果字节跳动估值为750亿美元，将超过此前同一梯队的美团和京东，仅次于蚂蚁金服，后者在最近一轮融资中估值达到1600亿美元，750亿美元还将是仅次于BAT和蚂蚁金服的第五大互联网公司。 可以明显的看出，目前中国互联网第一梯队只有：阿里巴巴和腾讯；第二梯队为：蚂蚁金服、字节跳动、美团点评、京东、滴滴、拼多多、百度、网易和小米等等；其它第三梯队很多就不一一罗列了。 那么我们现在还称 BAT 还合适吗？ ATM? ATZ? 这些都不重要了，重要的是百度确实已经掉队很久了！不但从市值上掉了下来，从人气、价值观、管理等各个方面都在走下坡路。 中国互联网就是一场冲击的洪流，在这场洪流中没有人可以安稳不动，只要不加大马力前进，分分钟就被取代抛弃。 就像诺基亚CEO最后说的那句话：我们没有做错什么，但是我们输了！ 2.那么我们是从什么时候开始流行说 BAT 呢？ 我们先来回顾一下 BAT 创建的历史。 1998年11月，腾讯由腾讯五虎（马化腾、张志东、陈一丹、许晨晔、曾李青5位创始人）共同创立，2004年，腾讯公司在香港联交所主板公开上市估值 6 亿美元。 1999年9月，马云带领18位罗汉在杭州的公寓中正式成立了阿里巴巴集团。2007年，旗下B2B公司阿里巴巴网络在香港挂牌上市估值200亿美元，不过后来大跌现已退市。 2000年1月1日，李彦宏在北京市中关村创建了百度在线网络技术（北京）有限公司。2005年8月5日在纳斯达克上市，创下了5年以来美国股市上市新股当日涨幅最高纪录，市值40亿美元。 三家公司于1998-2000依次成立，掀起了中国互联网的第二波浪潮（第一波四大门户），三家在各自领域攻城掠地，他们都发展迅猛但相互之间还没有交集，不过后来就不一样了。 时间又来到了十年后。 那个时候马云还没整天喊退休，阿里巴巴刚开了十周年纪念会；李彦宏也没被别人泼矿泉水，百度还是民族的骄傲；马化腾正意气风发，腾讯登顶中国互联网市值榜眼。 2009年12月，腾讯的市值则高达336亿美元，也超过后两者市值总和：百度市值146亿美元；阿里巴巴市值127亿美元。（阿里巴巴市值只是阿里的上市部分公司市值） 2009年底，当人们对中国互联网公司进行盘点的时候发现，腾讯、百度、阿里巴巴成为了中国最强的三家互联网公司，四家门户网站紧随其后。 2010年，为了方便称呼这三家中国最顶级的互联网公司，慢慢有网友将这三家公司的首字母提取出来组成 BAT，分别代表百度公司(Baidu)、阿里巴巴集团(Alibaba)、腾讯公司(Tencent)。 BAT 这个称呼第一次走上历史舞台。 2010年，陈一舟写了一篇文章《最大竞争来自百度阿里和腾讯》，文章中提到：他最关心的是中国的“BAT”三巨头：百度、阿里巴巴和腾讯。这是目前网上能找到称呼 BAT 最早的资料。 在之后的很长一段时间里， BAT 都是中国互联网最强的代表。直到 2015 年以后，慢慢有网友在互联网上发表说 BAT 已经开始慢慢没有 B 了。 3.为什么是2015年，百度又是如何掉队的呢？ 营收和利润是衡量一家上市公司的经营规模以及未来的盈利能力，财报能够直观的反应公司的经营状况，跟下图我们来查看一下 BAT 历年收入和利润。 可以看出百度在 2015 年明显出现了拐点，不但营收出现增长放缓，最主要的是利润增长在暴跌。从2015年以后，BAT 其实就已经慢慢分道扬镳了。 我们对比一下，阿里巴巴和腾讯这些年都做了什么，而百度又做了什么，这样可以更清晰的找到原因。 阿里巴巴生态 阿里巴巴集团业务和关联公司的业务包括：淘宝网、天猫、聚划算、全球速卖通、阿里巴巴国际交易市场、1688、阿里妈妈、阿里云、蚂蚁金服、菜鸟网络等。业务和民众生活深度融合，具有极强的影响力，互联网帝国已成。 当我准备梳理阿里从2009年到2019年的投资经历时，发现密密麻麻的几百条，特别是近些年阿里每年的投资并购都在几十起。感觉马云就像一位大师一样，在各个行业领域指点江山，纷纷扰扰的画出了一个阿里巴巴商业帝国。 阿里巴巴目前的业务主要分为四大类： **核心电商业务：**该业务包括了阿里集团的全部电商相关业务，涵盖子公司包括淘宝、天猫、阿里妈妈、AliExpress、菜鸟物流等，根据2017年财报，在公司营收占比中占据85%的份额。 **云计算业务：**该业务主要是阿里云计算相关的业务，阿里云凝聚了阿里在云计算、大数据、AI方面的技术结晶，并对外输出赋能，是阿里近两年增速最快的业务之一。 **数字媒体和娱乐业务：**该业务主要包括了优酷土豆、阿里音乐、阿里体育等子公司，是阿里针对国内数字经济消费升级趋势的重要布局； **创新项目及技术发展：**该项目包括了高德地图、阿里钉钉、YUNOS等多个新技术创新子公司。.此外，阿里集团已经同意收购蚂蚁金服33%的股份，在2018年4月宣布全资收购饿了么，阿里帝国的版图得到进一步扩张。 腾讯生态 腾讯主要的业务还是社交+游戏，特别是在移动互联网时代的超级大杀器：微信；如果没有后来微信的突局，也许腾讯也会慢慢掉出第一梯队。 2010年，腾讯和360在用户桌面大战，展开了相互卸载相互屏蔽大战，腾讯QQ宣布必须二选一，如果用户电脑安装了腾讯就不能安装360，安装了360就不能安装腾讯。3Q大战震惊中信部，在官方的协调下最终平息。 同年《计算机世界》刊登了一篇题为《“狗日的”腾讯》封面头条文章，文中把腾讯作为互联网公敌进行批判，将互联网商业竞争写成了不可调和的恩怨。 天下苦腾讯久矣！随后马化腾进行了深刻的反思，并且从此彻底改变了这家公司的发展思路，从之前的模仿、复制、超越，变后来的买买买，投资了中国半个互联网。 目前，腾讯已投资超过700家公司，其中，2018年有16家公司上市，包括拼多多、美团点评等。 百度生态 百度的收入来源可分为两块：百度核心业务和爱奇艺。百度核心业务包括广告(搜索+信息流)、AI、金融服务等除爱奇艺以外的所有相关收入。爱奇艺业务，包括爱奇艺相关的广告、会员、版权收入等。 从上图的营收情况来看，百度的收入构成其实非常单一，80% 以上都依赖于搜索广告，一旦整个经济形式不好，很容易影响整个公司的财报收入。 可以看到后期核心业务和爱奇艺的收入都变得很低。百度战略投资相对 AT 两家公司一直比较保守，近年来一直押注 AI 领域的发展，投资了很多 AI 公司。 百度也推出了很多产品，但更多都是在围绕着搜索来做，除过少数产品（百度地图、百度贴吧、百度网盘）很不错外，其它产品均没有特别大的动作。 百度战略投资列表： 携程旅行网（持股21.6%） 爱奇艺（持股69.6%） 巴西Peixe Urbano 百度糯米（持股100%） 百度糯米影业（持股100%） 91无线网络有限公司（持股100%） 易车（持股3.2%） 中信百信银行（持股30%） 齐家网（持股14.393%）及10.07%投票权 果壳网（持股9.38%） 威马汽车4.91% 我在互联网上搜索百度产品矩阵、百度生态图等信息的时候资料很少，从这方面来讲百度的生态布局相对 AT 来讲非常有限。 总体看了三家这些年的动作，明显感觉马云就像一个象棋大师，不断在各个领域投资布局；马化腾就像一个剑气高手，不断强化产品+游戏两个领域的修为，后期转变思路也进行生态布局；百度在投资领域比较一般，更多都是在流量获取方面进行卡点。 4.那么百度掉队的真正原因是什么呢？ 没有对比就没有伤害，对比同样做搜索的谷歌，百度的发展可谓差强人意。2019年全球市值最高的企业中，谷歌排名第四，市值高达 8000 多亿美元！中国只有 AT 上榜，成为了其中唯二的两个红色旗帜。 第一原因是太急功近利 百度太以利润为中心，扭曲了人们对搜索引擎使用的基础。可能在百度开发凤巢系统的时候，就已经决定了这家企业的价值观。 虽然谷歌也是以广告为生的企业，但谷歌坚持的是优先给与用户最想要的内容，其次才是展示广告。而百度刚好反了过来，只要付费，什么内容都可以排在第一位。 这种商业模式发展到最后，其实就是杀鸡取卵。但其实不止是百度，中国企业都被带入到这个节奏中，现在搜狗和360搜索其实也是这样的商业模式，所以我说搜狗和360永远都超越不了百度。 第二原因是错失移动互联网 从2010年左右中国开始爆发移动互联网，各家公司纷纷抢位，根据2019年使用人数最多的10款APP中，腾讯5款，阿里4款，百度1款，百度布局最少。 最主要的是移动互联网时代到来之后，人们使用互联网的方式发生了根本性的改变，在智能手机上人们都是以超级 APP 为中心，再也不需要百度一下去查询相关信息。 人们使用手机的时间越长，百度的搜索优势就越少，所以到了今天，移动端拥有巨大优势的腾讯和今日头条的广告收入越来越多，百度相应的就会越来越少。 第三原因是布局失误 其实腾讯和阿里现在仍然是以当初的主业收入为准，但更重要的是阿里和腾讯的想象空间更大一些，腾讯有超级 APP 微信+全球各地投资的游戏公司；阿里布局了金融、新零售、云计算等想象空间更大的业务。 百度虽然这些年全力押注 AI 领域，但短期内 AI 很难给百度带来非常大的利润，并且 AI 领域的发展还存在诸多的不确定性。 现在唯一还不错的就是爱奇艺的流量很大，但目前中国视频网站都还处在不断的烧钱中，所以对于百度来说，这么多年除了核心的广告业务，再没有一条业务线能够拯救百度于水火间。 第四原因是管理层动荡 对于腾讯和阿里，百度的管理层简直就是三天两头的换，2017年好不容易迎来了有可能改变百度的陆奇，于2019年也离职了。 其实百度招聘了很多历史上有名的人才：陆奇、张亚勤、吴恩达、李一男、李叫兽、李明远、俞军等，里面每一个拉出来都是牛逼闪闪的人物。 高管频繁离职的背后是百度的经营策略不稳定，公司没有一个统一的发展战略。可能还有一个原因：企业没有一个良好的文化基因留住高管。 5.最后 一家互联网公司掉队并不可怕，可怕的是大家都陷入了一种低端竞杀的模式，真心期待中国搜索市场能有大的变动，还中国网民一片朗朗晴空。 BAT 曾经是中国的骄傲，现在从某种意义上来讲他们仍然是，但就是因为企业选择的商业路线不同，就产生了完全不同的结果。 中国未来会产生更多更伟大的互联网公司，伟大公司的基础就是拥有良好的价值观。同时中国的发展也需要更多的互联网公司站出来，我们不但希望有 BAT、ATM ，还希望有更多的 ATMJDH 等公司。 大家如果想知道，百度和谷歌为什么是两个不同的命运，可以在纯洁的微笑公众号回复：谷歌，即可查看。 参考: BAT十年财报对比：AT争王、百度掉队 百度的17年产品史——突围、霸权、迷失、焦虑与变革 阿里巴巴的商业版图？","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"冯玉祥自传抄录","slug":"before/2019-09-17-fengyuxiangBook","date":"2019-11-18T10:46:19.082Z","updated":"2019-11-19T04:36:21.988Z","comments":true,"path":"2019/11/before/2019-09-17-fengyuxiangBook.html","link":"","permalink":"https://upsame.coding.me/2019/11/before/2019-09-17-fengyuxiangBook.html","excerpt":"偶有所得","text":"by Upsame 冯玉祥自传抄录 可见能待人以德，人自会以德相报；你真心待人，人亦自以真心待你。若先存一猜疑防备之心，则天下就没有一个好人了。 我以为世界上所以还能成功许多事业，都是傻子干出来的，绝不是聪明人干出来的。傻子何以能成事业？就因为他只问此事自己该不该做。若认为该做，即努力以赴，苦干到底，赴汤蹈火，在所不辞。其间绝不把个人的厉害计算在内，故结果纵不能成功，亦必成仁。 每次作战之前，应当是官长士兵确实明了：这次我们是同谁作战，为什么作战，为什么必须以武力打倒敌人。官长士兵对这些都能切实了解，作战时才能发挥最大的效力。否则，短时间的一冲一击还可勉强应对，时间一长，必不免崩溃败北，无法支持。 为将者体力精神不足，嗜好太多，绝对担负不起统兵之责；身冒矢石，披坚执锐的士兵，当然更需要精神体力充足。 你们中国女子，不读书，缠小脚，更不知爱国家爱世人，照传统礼教永远不能离家一步；就是男子，也都老死于家乡，即有远志的，禁不起家属一番劝阻，妻子牵衣一顿哭泣，也都大志全消。","categories":[{"name":"生活故事","slug":"生活故事","permalink":"https://upsame.coding.me/categories/%E7%94%9F%E6%B4%BB%E6%95%85%E4%BA%8B/"}],"tags":[{"name":"Life","slug":"Life","permalink":"https://upsame.coding.me/tags/Life/"}]},{"title":"历史书签2019","slug":"before/2019-09-16-bookmarks","date":"2019-11-18T10:46:19.082Z","updated":"2019-11-19T04:36:31.518Z","comments":true,"path":"2019/11/before/2019-09-16-bookmarks.html","link":"","permalink":"https://upsame.coding.me/2019/11/before/2019-09-16-bookmarks.html","excerpt":"google浏览器资源","text":"by I Foresee Bookmarks ========= 书签栏 Google 在线文本比较工具 - 众人搜索网 3GPP 3GPP specification series: 36series 3GPP中用于LTE的36系列协议大全_x-leonard_新浪博客 世界各个地区WIFI 2.4G及5G信道一览表（附无线通信频率分配表） LTE的时间提前调整方法及基站_2011100414696_专利查询_专利网_高智网 LTE帧结构----符号长度。_时九_LTE通信人_新浪博客 Modelsim Matlab产生TestBeach所需要的波形数据 - HOOKNET - 博客园 ISE联合modelsim功能仿真和综合后仿真 - yf869778412 - 博客园 modelsim-do_百度文库 Modelsim Simulation操作技巧_百度文库 菜鸟学习Modelsim 之 遇到的问题及解决方法 modelsim学习3——监视模块和提示信息（monitor，display，error ,time） - 快乐至永远上的博客 - 与非博客 - 与非网 Verilog Modelsim 文件操作_百度文库 Verilog中文件输入与输出任务实例解析 - CSDN博客 ISE和Modelsim联合仿真（转） - feitian629 - 博客园 ModelSim 使用笔记1 - Biiigfish - 博客园 modelsim添加vivado仿真库的方法 - 中国疯 - CSDN博客 随机接入过程 序列的自相关和互相关计算 - CSDN博客 函数的相关与卷积 采样定理详解：3个主要条件只需满足其中任意2个 LTE 中的上行时间同步_lte2010_827_新浪博客 LTE 时偏纠正 下行同步 - CSDN博客 Matlab filter函数滤波后去除相位延迟的N/2(N为滤波器的阶数)个点数据长度变短后怎么处理_百度知道 MATLAB设计FPGA实现联合ISE和Modelsim仿真的FIR滤波器设计_百度文库 FPGA数字信号处理（五）Vivado FIR IP核实现 - CSDN博客 Matlab硬件代码(HDL)生成 - 百度文库 GitHub - zhanwen/MathModel: 研究生数学建模，数学建模竞赛优秀论文，数学建模算法，LaTeX论文模板，算法思维导图，参考书籍，Matlab软件教程，PPT Matlab 2016a/b中调用GPU速度巨慢的解决办法 - 小四掰的博客 - CSDN博客 Matlab 应用GPU加速 - quanwei的博客 - CSDN博客 磁力链,bt搜索,种子搜索,番号搜索器,torrentkitty中文网 哔哩哔哩大会员|正规官方会员(原价15元/月)全客户端通用(新极品自动发卡平台) 如何产生m序列和gold序列 MatConvNet+Matlab2017a+CUDA8.0安装 - hear_nothing - 博客园 NVIDIA CUDA各版本下载链接（更新至2019-3-7，包含最新10.1版本） - 越野者的博客 - CSDN博客 一文读懂matlab中rcosdesign函数（成型滤波器） - lanluyug的博客 - CSDN博客 History Windows系统下latex：texlive2018和texstudio - CSDN博客 MathType 7 Documentation Latex常用数学符号输入方法_百度经验 Xilinx FPGA ChipScope的ICON/ILA/VIO核使用 - CSDN博客 tcolorbox 宏包简明教程 - LaTeX科技排版工作室 超强OCR识别软件，语言翻译软件，OCR软件下载 - 泰比（ABBYY）官方网站 如何防止Dao版mathtype在打开word后联网检查是不是Dao版？_百度知道 图片公式转LaTex Mathpix Snip win7中报错：无法启动此程序，因为计算机中丢失api-ms-win-crt-runtime-|1-1-0.dll - xiamoyanyulrq的博客 - CSDN博客 一个宏包排版Ubuntu、Mac、Windows终端窗口 - LaTeX科技排版工作室 GitHub - paullinuxthemer/Mc-OS-themes: Mac OS-themes for the Linux-Gnome desktop 电子科技大学–教研室登陆 电子科技大学-注销 GitHub - yinghuocho/firefly-proxy: A proxy software to help circumventing the Great Firewall. Microsoft Office 主页 比较 Office 365 教育版计划和价格 - Microsoft Office 官方网站 浪漫爱心表白网页在线生成页 – 表白驿站 生日快乐 免费logo在线制作-字体logo-logo设计-U钙网 【PS黑科技】用PS默认图案制作出玉石、翡翠质感的UI图标-大中课堂-教育-高清完整正版视频在线观看-优酷 FreeV2ray GitHub - selierlin/Share-SSR-V2ray: 🃏 Free SS/SSR/V2ray 免费分享节点账号信息网站 《超时空传输》电影迅雷下载-高清在线观看-BT种子磁力下载 - 全集网 win10家庭中文版升级专业版方法(无损升级)－系统城 ubuntu执行过的网页 容器与云|如何在 Ubuntu 18.04 服务器上安装和配置 KVM VMware虚拟机开机进入BIOS的方法_百度经验 Manjaro稳定版下载 | Manjaro Linux 乐于简单 KVM入门 - 被罚站的树 - 博客园 给Ubuntu18.04安装mac os主题 - feipeng8848 - 博客园 创新性和可靠性：我们的功能 – AnyDesk AnyDesk：一款极点简略且非常好用的远程软件！-百度经验 Win10使用附件中的远程桌面连接Ubuntu 16.04图形界面（xrdp方法） - szw4090416的博客 - CSDN博客 windows 10连接家庭ubuntu18远程桌面 - Amdy_amdy的博客 - CSDN博客 VMware Esxi 下载地址 - javaee1234的博客 - CSDN博客 Windows+NAS全程分享我的网络存储折腾经历 程序员该如何转型 5G 开发？ IPv6应用实验平台——下一代互联网国家工程中心 理解链路本地址与站点本地地址-12036523-51CTO博客 IPv6地址格式简介以及常见的IP地址 - Stoneshen的博客 - CSDN博客 IPv4到IPv6的过渡解决方案之6to4/6in4隧道 - MCU综合技术区 单片机论坛 Linux也可以这样美——Ubuntu18.04安装、配置、美化-踩坑记 - 丶legend的博客 - CSDN博客 Xilinx xilinx fir滤波器IP - CSDN博客 ise工程移植到vivado中 - CSDN博客 CPRI 基于Xilinx器件的CPRI协议实现方法 - 网络通信 - 电子工程世界网 NGC ISE中怎么对NGC文件仿真 - 交流讨论 - EETOP 赛灵思（Xilinx） 社区 ISE添加IP、NGC、EDN的方法_烊子有得有失_新浪博客 如何在ISE中产生用于其他项目的NGC文件（ZZ）_飞天玉龙_新浪博客 Xilinx FPGA ChipScope的ICON/ILA/VIO核使用 - summer112的博客 - 与非博客 - 与非网 Xilinx Srio详解&amp;IP核使用 - CSDN博客 System Generator入门 - HubertXia - CSDN博客 ISE 中使用system generate - HubertXia - CSDN博客 FPGA+DSP SRIO通信（四）——中断系统（一） - haiyonghao的博客 - CSDN博客 xilinx IP核配置,一步一步验证Xilinx Serdes GTX最高8.0Gbps - kuangxin的博客 - CSDN博客 FPGA系列（system generator环境认识篇） - 竹海的博客 - CSDN博客 微软Bing 经济观察网 网站建设120 KodExplorer - Working ! 604教研室 /NAS/ 的索引 【转】证书安装指引（腾讯云） KodExplorer - Unable Now! 十款免费Web服务器套件-轻松搭建Apache,PHP,PhpMyAdmin,MySQL | 免费资源部落 China 简体中文 « 下载 — WordPress 技术人如何搭建自己的技术博客-纯洁的微笑-51CTO博客 创造狮 创意工作者导航 Domain Manager KodExplorer - 100 蓝奏·云存储","categories":[{"name":"生活故事","slug":"生活故事","permalink":"https://upsame.coding.me/categories/%E7%94%9F%E6%B4%BB%E6%95%85%E4%BA%8B/"}],"tags":[{"name":"Life","slug":"Life","permalink":"https://upsame.coding.me/tags/Life/"}]},{"title":"学习 Markdown 文本标记语言","slug":"2019/2019-10-28-learn-Markdown","date":"2019-11-17T11:38:05.673Z","updated":"2019-11-18T09:01:15.284Z","comments":true,"path":"2019/11/2019/2019-10-28-learn-Markdown.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-28-learn-Markdown.html","excerpt":"学习 Markdown 文本标记语言","text":"原创 2019年10月28日更新 学习 Markdown 文本标记语言 谁用Markdown ? Markdown是为哪些使用者设计的？ 首先要确定你是否真的需要Markdown，使用某种工具是为了提高效率或者某种体验的，如果这种工具并不能显著帮你改善体验，那就让它见鬼去吧，哪怕这个工具学起来很简单。 Markdown是为那些需要经常码字或者进行文字排版的、对码字手速和排版顺畅度有要求的人群设计的，他们希望用键盘把文字内容啪啪啪地打出来后就已经排版好了，最好从头到尾都不要使用鼠标。 这些人包括经常需要写文档的码农、博客写手、网站小编、出版业人士等等。通常情况下，网络上需要进行大量文字输入的地方都可以通过所见即所得的方式排版（比如知乎的答案编辑模式），本地写作的话则可以使用word这类常用的文本编辑软件，当然你也可以蛋疼地手工使用htMl标签实现排版效果——而Markdown只是使这一切更方便了一点而已，所以如果你觉得现有文本编辑方式完全够用了，就别费神折腾了（除非你在使用像github这样Markdown作为主流编辑方式的网站）。 我对Markdown的 感想： Markdown ，怎么说呢？本身不支持注释功能让人很失望。 第二：只能转化为htMl文件，通过一定渠道可以转化为PDF文件，不能转化为Word（可以直接复制粘贴到word，但是格式不好看，想要的效果都没有了） 第三：PDF本身难以编辑，还是Word比较通用，为了保证兼容性（与其他同学的兼容），还是首先选择word编辑吧！ 我对Markdown的理解 Markdown 就是为了展示给人看的吧，别人不能编辑，可是如果我有一个Markdown文件，我刚使用什么软件去查看这个文件排版格式呢?当然是Markdown专用写作软件，或者支持Markdown书写的文章平台。 我们设想这样一个情景：我想要查看Markdown文件编译出来的格式文件，所以我找到了一款阅读器可以打开文件并阅读，可是我发现错误想要修改，但是编译出的有格式的文件不可编辑，于是我当然想到要编辑Markdown源文件，这样，可以解释为什么Markdown文件至少要包含源文件了。 其实应该有更好的选择，即：包含.Md的源文件和可以阅读的格式文件，在编辑阅读器中点击修改就可以调出源文件.Md进行修改。 实现这一功能的软件就是：Typora(其实真正让我选择它的只是因为它好看而且免费\\手动微笑。能支持数学公式的编辑，能导出为pdf) 。 事实上我们获得的文件夹中只有源文件.Md而已，因为是即时编译的，所以直接能看到效果。 综上所述，只要我拥有一个可以进行.Md文件即使编译的软件就可以很好地打开Markdown 文件和其产生的格式（效果）文件。 像notepad++等这样的文本编辑器，只具有编辑。Md文件的功能，当然不能奢望他还能看到编辑生成的最后效果文件的样子。（当然，你可以在头脑中想象嘛！） 你所看到的各种Markdown编辑器显示的样式都是转换为HTML后加上CSS显示的。 关于Markdown编辑、编译器的选择： 那么选择哪一款软件呢？ 有道云笔记吗？MarkdownPod 等桌面软件？CSDN? 简书？ 作业部落的CMd Markdown，还是马克飞象？ MarkdownPod等 已卸载 MarkdownPad是适用于Windows的Markdown编辑编译器，免费版不能导出PDF等,付费版需要15 dollars。 并且，我安装MarkdownPad之后莫名不能用，提示有错，写入的.Md文件不能预览，这还有什么用呢？ 所以我果断卸载了。 其他的Markdown编辑器应该不能免费支持PDF导出吧？ 听说Pondoc–“瑞士军刀”要编译汉字需要结合latex引擎，配置复杂，所以还算是放弃使用这些软件吧。 CSDN就可以支持导出HTML文件（纯文本有乱码，带模板的正常） 发现新大陆： Marxico 中文名马克飞象，可以PDF导出，可选择汉字，就是颜色微微不同，效果不如HTML好，但是确实相当不错的。 马克飞象，本地客户端与在线客户端一模一样，所以安装后卸载了。打开chroMe直接访问官网链接就可以了。 马克飞象提供 10 天的免费试用，之后如继续使用，请购买会员服务。 未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。 作业部落的CMd Markdown 貌似也要会员才能导出。 简书注册需要手机，写作平台很好，对 Markdown 的支持也很棒。 最后的选择当然是：支持Markdown的个人博客、简书、CSDN了。 点击这里 查看Markdown写作平台选择。 点击这里 查看我的个人博客建设规划。","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"函数的相关与卷积","slug":"2019/2019-10-26-Correlation-Convolution","date":"2019-11-17T11:38:05.668Z","updated":"2019-10-26T12:40:40.917Z","comments":true,"path":"2019/11/2019/2019-10-26-Correlation-Convolution.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-26-Correlation-Convolution.html","excerpt":"函数的相关与卷积","text":"原创 [TOC] 信号处理过程中 卷积的定义 卷积满足交换律、分配律、结合律。也具有位移不变性以及缩放性质。 互相关的定义 替换变量后有： 上述两式完全等价。 性质： （1）互相关是两个函数间存在相似性的量度。 （2）由上述（2）式可得： （3）相关运算和卷积运算的区别： 对相关来说，f(x)要取复共轭，运算时f(x)不需折叠。 （4）f(x)和g(x) 做相关 等于 f*(-x) 与 g(x) 做卷积。 （5）注意互相关不满足交换律。 自相关 在信号分析当中通常将自相关函数称之为自协方差方程，定义如下： 自相关是互相关的一种特殊情况，就是一个序列和它本身做相关，主要用来衡量一个序列在不同时刻取值的相似程度。 数理统计中 相关：我们通常说的相关系数的学名是—皮尔逊积差系数（Pearson’s product moment coefficient），这种相关系数只对两个变量的线性关系敏感。 Pearson 相关系数使用两个变量的协方差和标准差来定义： 其中，cov 是协方差，sigma 是标准差。因为 cov 可以写作： 所以 Person 相关系数的定义式可以写作： 自相关的定义式如下： 如果随机过程是一个宽平稳过程，那么均值和方差都不是时间的函数，所以，自相关定义式变为： 在某些学科中，会去掉归一化因子σ2，使用自协方差来代替自相关。但是归一化因子可以让自相关的取值在 [-1, +1] 之间，不会随着序列的绝对大小而变化。 在信号处理中： 自相关的定义会去掉归一化，即不用减去均值，也不用除以方差。当除以方差时，一般叫做另外一个名字：自相关系数(Autocorrelation coefficient)。","categories":[{"name":"5G","slug":"5G","permalink":"https://upsame.coding.me/categories/5G/"}],"tags":[{"name":"5G","slug":"5G","permalink":"https://upsame.coding.me/tags/5G/"}]},{"title":"个人博客建立规划","slug":"2019/2019-10-22-individual-blog-setup","date":"2019-11-17T11:38:05.663Z","updated":"2019-11-19T04:45:48.023Z","comments":true,"path":"2019/11/2019/2019-10-22-individual-blog-setup.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-22-individual-blog-setup.html","excerpt":"个人博客建立规划","text":"原创 首发于我的个人博客 www.upsame.com 基础平台选择 主站采用Github pages搭建，FPGA分站基于Coding pages搭建。 博客主题均选择开源解决方案。 建立分站的原因主要是Github国内访问不稳定的问题，其次是Github 博客百度不收录问题。 主站采用Github pages搭建完全根据技术人如何搭建自己的技术博客 的步骤和模板搭建，然后进行了一些自定义设置，并将网站设置为https访问方式，增加安全性。FPGA分站则参照主站的建立方法从一些开源模板中挑选了一个自己认为不错的模板来搭建，由于Coding pages搭建的可以被百度索引，并且实际上访问速度快于Github，所以也有打算将主站也搭建在Coding上。 值得一提的是网上很多吐槽Coding 的Pages服务的，说这也不好那也不好最后都去了Github pages。实际上，目前腾讯与Coding联合打造的腾讯开发者平台上的Coding服务非常好，Github的功能都有，还有无限私有库，值得了解。 图片处理方案 合理的发文方式是，首先在自己博客平台上发文，使用图床工具（比如路过图床、SM图床）或者服务器空间存储的图片，然后二次发布到简书平台，CSDN平台（CSDN平台可以选择不进行二次发布，或者在文章图少可以发布，图多不建议）。 下面将介绍我的方案选择原因。 1、 使用简书作为图床工具 具体操作就是用简书当作文章首发平台，然后将原文再次发布到我的个人博客网站上。然后再将文章发布到其他平台，比如CSDN。 这样做有个重大问题： 之前发现简书的markdown中的链接与时间显示中的链接有所不同，以为这是简书的某种机制，只需要修改链接为实际显示的链接就可以了，结果替换链接后仍然无法自动加载。 简书的图片外链在我的自建博客中无法自动加载，对图片右键点击用新标签页打开图片显示没有权限，在浏览器直接输入图片引用地址点击 enter又能够访问，此时刷新网站页面可以看到图片加载了。这里面应该是存在某些权限问题。 因此没有知道原因之前不能使用简书当作图床工具使用。 2、 使用CSDN作为图床工具 具体操作就是用CSDN当作文章首发平台，然后将原文再次发布到我的个人博客网站上。然后再将文章发布到其他平台，比如简书。 问题主要是水印： CSDN中上传图片和简书类似，但是目前会强制在右下角加上水印，目前没有解决方案，如图： 这样导致发布在我的个人博客平台后文中的图片都有CSDN的水印，严重影响个人体验，所以这种方案肯定不行。 3、 使用专业图床工具，比如路过图床和SM图床 这两个图床算是比较稳定的，基本都存活了好几年了，路过图床的收费特性也基本肯定了跑路的概率较小。 具体操作便是本地使用Markdown编辑器编辑文章，图片上传到图床，将写好的文章发布到个人博客、简书和CSDN。 存在的问题主要是图片链接的时效性问题，图片外链访问是否长期且稳定，这个还要看图床的支撑团队。这里列举的路过图床和SM图床都比较稳定，不放心的话可以付费。不过对于我本人来说，为图床付费还不如我直接购买对象存储服务套餐来的划算。 4、 将图片存储在服务器上 具体操作便是本地使用Markdown编辑器编辑文章，图片直接保存在Git根目录下，文章内直接调用，文章完成后发布到分别个人博客、简书和CSDN。 将图片和网站文章均存储到云服务器上，这样访问的速度完全取决于服务器带框，数据的保障完全在于自己是否续费。 这样的自主性很大，但是由于文章累计导致图片存储空间快速增加，后续可能需要购买对象存储空间或者使用大容量的与服务器。本人才博客初期，目前还没有这方面需求，但是这些必须考虑在未来的网站规划中。 一些问题： 收发于简书的文章拷贝到CSDN中的链接可以使用，CSDN会自动进行转化，虽然图片不会添加水印，但是不知道为什么即使再CSDN平台上查看此文章时图片加载速度特别慢，而且会有很多图片会加载失败；再次将CSDN转化后的文章发布到自己网站时也加载速度特别慢，几乎等于无法使用。推测转化后的链接可能访问速度较慢，在某种层面上要求用户将图片下载后再上传（顺便自动加上CSDN的呵呵水印）。 于是，CSDN显然不能作为首发平台，而且如果它作为次发平台，它对于链接的转入却没有什么支持，所以其他平台发布的文章在此平台次发时应该需要较少的图片，否则就不在此发了，因为加载实在有点慢。 最后的选择： 综上，我的主要写作平台由我的博客+CSDN变为 我的博客+简书+ CSDN（CSDN可不用）","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"ISE和Modelsim联合仿真","slug":"2019/2019-10-20-ISE-Modelsim-setting","date":"2019-11-17T11:38:05.629Z","updated":"2019-10-23T13:17:33.778Z","comments":true,"path":"2019/11/2019/2019-10-20-ISE-Modelsim-setting.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-20-ISE-Modelsim-setting.html","excerpt":"ISE和Modelsim联合仿真","text":"原创 首发于我的个人博客 www.upsame.com ISE和Modelsim联合仿真 相信很多人会遇到过这个问题，不知如何让ISE调用Modelsim进行仿真。我也迷糊了不少时间，查查找找，终于弄明白了，所以有了本文，和大家分享一下。我尽量讲得详细点儿，多多上图。 我的环境： Windows 7 64位，Xilinx ISE Design Suite 13.4（D:\\Xilinx\\13.4），ModelsimSE-64 10.1a（D:\\modeltech64_10.1a， 哈，也是64位的）。不过32位的和64位的设置几乎没有什么区别。 先安装好ISE和Modelsim， 网上看过一些文章总说先装ISE再装Modelsim，不过我整过一阵，其实二者的顺序是无关紧要的。 安装过程不在本文的讨论范围内，就不多说了，不过一定要注意版本要合适，Modelsim的版本不要太低，这个可以自己到网上查一查，还有非常重要的一点是安装路径不能有中文或空格。 编译仿真库 由于我装的Modelsim SE是通用版的，只自带了少许的仿真库（Simulation Library），所以还要编译一下Xilinx的仿真库。只有XE才自带Xilinx的仿真库，如果装的是XE版便不必编译仿真库了。编译库可以用ISE带界面的工具，也可以用命令行下的，前者方便，先讲前者。 打开编译库工具“Simulation Library Compilation Wizard”：“开始—所有程序—Xilinx ISE Design Suite 13.4（版本不同就不同）—ISE Design Tools—64-bit Tools（32位的选32-bit Tools）—Simulation Library Compilation Wizard”。 注意，64位系统中默认安装了64位和32位的ISE，如果你想用32位的ISE，那你就得选32位的编译库工具，不能混着用的，而且Modelsim也得装上32位的版本，所以我建议64位系统的就用64位的ISE，而32位系统的没得选，只能用32位的。如图01所示。 打开工具之后，在“Select Simulator”下面选中你所装好的Modelsim版本，我这儿选“Modelsim SE”，在“Simulator Executable Location”下面填入Modelsim.exe的所在的文件夹，点“Browse…”按钮添加也行，我这儿是“D:\\modeltech64_10.1a\\win64”（不含双引号，下同，除非有特别的说明），如图02，然后Next。 之后是选择需要编译的语言，选“Both VHDL and Verilog”，一般两种都要用，如图03，然后Next。 接下来是选择设备，默认是全选，如果有一些你实在用不上就不选吧，这样可以省点时间和硬盘空间，全选时挺大条的，如图04，还是Next。 下一步默认就行，全选上，下面的两行东东留空即可，那是添加额外库的，第一行是路径，第二行是命令参数，无视之。如图05，Next。 这一步比较关键，在“Output directory for compiled libraries”下面填入输出已编译库的路径，默认也行。个人建议新建一个单独的文件夹，好管理，只要版本一样的，下次直接拿来用，重装也不怕。不过文件夹的名字和整个路径中绝对不能有中文或空格，切记、切记！！！我这儿是“D:\\modeltech64_10.1a\\Xilinx_lib”。其他的选项默认便可，之后点“Launch Compiled Process”，如图06。之后就开始编译了，如图07。其实这一页是很有用处的，详情请点下面的那个“More Info”按键，不过帮助是英文的。 等待……编译完后就会出现一些编译日志，图08，Next，图09，Finish。只要没有Err就成，Warn无视。若有Err，就回顾下版本对不对，路径有没有中文或空格。 设置ISE和Modelsim的关联。 在“D:\\Xilinx\\13.4\\ISE_DS\\ISE”文件夹中找到“modelsim.ini”，“D:\\Xilinx\\13.4”这个是你的ISE安装目录，后半路径是一样的，实在不行就进入安装目录然后搜索“modelsim.ini”，如图2.1。 打开“modelsim.ini”，用记事本打开时不要用自动换行功能，菜单中“格式—自动换行”把勾去掉。个人不建议用记事本，写字板那就更不行了，有的文件用写字板改了会出现问题，搞编程类的总得有个好点儿的文本编辑工具吧，我用的是EmEditor，到网上搜一下吧，有不少呢。在第九行左右（可能是）找到“[Library]”，下面一行的“others = $MODEL_TECH/…/modelsim.ini”和行的开头的分号（；）的全部都无视。那些行开头没有分号的，格式一般是“X···X = 路径”，一直到“[vcom]”之上的都要，选的仿真库多时可有好长的一段，全部复制。见图12、图13和图14。 然后在Modelsim的安装目录下，我这儿是“D:\\modeltech64_10.1a”，找到“modelsim.ini”，名字一样。先去换个文本编辑工具吧，用记事本打开它会是乱糟糟的一片，没法改。打开后，同样是找到“[Library]”，在它的下面粘贴上刚刚复制的那一大段东西，注意，行开头不要有分号（；），而且人家原有的就别动它，别删掉了。只要在“[Library]”和“[vcom]”之间粘贴就行，然后保存。如图15、图16和图17。 打开ISE，“开始—所有程序—Xilinx ISE Design Suite 13.4（版本不同就不同）—ISE Design Tools—64-bit Project Navigator（32位的就开32-bit Project Navigator）”，图18。 然后在ISE的菜单上“Edit—Preferences…”调出Preferences设置窗口，在左边的“Category”下选中“ISE General—Integrated Tools”。在Integrated Tools项设置中，右边的“Model Tech Simulator：”下面填入Modelsim.exe的文件路径，点旁边的“…”按键选中Modelsim.exe也行，我这儿是“D:\\modeltech64_10.1a\\win64\\modelsim.exe”（不要双引号）。32位的可能是“D:\\modeltech32_10.1a\\win32\\modelsim.exe”。如图19和图20。 到现在已经把家伙准备好了，接下来就是使用它了。新建一个工程，图21，这步不多说，Next。 接下来这一步在“Simulator”一项选“Modelsim-SE Mixed”，“Mixed”支持两语言，“SE”是版本，选你自己对应的就成，其它项不讨论，如图22，Next，Finish。忘了选或想重新选的看图23。 新建你的VHDL或Verilog文件，这个不多说。 完成之后，切换到仿真模式，就是点工程上面的“Simulation”，可能不同版本会不一样，ISE9.1i 是在“Source for”的下拉菜单中选择Behavioral simulation，不过意思明白就行。建立Test Bench文件，若是VHDL的，也按上面说的处理一下，就是把那两个库声明一下。在“Hierarchy”框选中Test Bench文件，在下面的那个框中点“Modelsim Simulator”前的加号。展开得到“Simulate Behavioral Model”，在它上面点右键，选“Process Properties…”，如图27。 在“Simulate Behavioral Model”上点右键，选“Run”就可以调用Modelsim进行仿真了，如图30。另外提一点，在ISE上也可以编译库的。在仿真模式中，在“Hierarchy”框中选中FPGA名，我这儿是“xc7a8-3csg324”（下面就是仿真文件）。然后在下面的框中点“Design Utilities”前面加号。展开后得到“Compile HDL Simulation Libraries”，在其上点右键，选“Run”，这样就会编译你的工程中所需的仿真库了 。 成功案例 如下图，没有报错，ISE调用Modelsim正常。","categories":[{"name":"FPGA","slug":"FPGA","permalink":"https://upsame.coding.me/categories/FPGA/"}],"tags":[{"name":"FPGA","slug":"FPGA","permalink":"https://upsame.coding.me/tags/FPGA/"}]},{"title":"文本OCR与公式OCR的选择","slug":"2019/2019-10-12-ocr-choose","date":"2019-11-17T11:38:05.622Z","updated":"2019-11-18T09:00:33.169Z","comments":true,"path":"2019/11/2019/2019-10-12-ocr-choose.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-12-ocr-choose.html","excerpt":"文本OCR与公式OCR的选择","text":"原创 关于文本OCR与公式OCR的一些理解 文本OCR: 最后比较结果是： Adobe Acrobat 与 有道云的OCR都很不错，最后使用Adobe Acrobat来使用。（Adobe Acrobat识别出的PDF导出为txt后更好用）。 首先：有道云笔记需要VIP功能才能使用OCR功能， 第二、外能图王OCR没找到破解版，应该效果比有道云笔记好一些。 第三、其他的网上OCR也试过，还是Adobe Acrobat 好用。 LightPDF 似乎是很厉害的PDF编辑软件，有OCR功能，识别准确率挺高的。这个软件使用在线的就可以了，不要进行安装，因为安装后的功能还没有在线使用的多，一些功能需要付费，特别是OCR功能只有在线的才能使用。 Google搜索OCR或许更能解决问题。 有些软件是可以识别手写字体或公式的，如果后面用到的时候可以再搜索（Google）。 公式OCR: mathpix_snipping_tool_setup 似乎只能安装再C盘，免费识别公式，但是速度很慢，是因为服务器在国外的原因吗？可能吧。 开VPN或者SSR对Mathpix软件有效，可能与浏览器有相同原理吧，这样访问起来就快了，不会出现Network Error的问题。（多次开关SSR后发现的确是这样的，所以以后用Mathpix就可以了）。 将公式截图直接识别为Latex代码，直接粘贴进Mathtype就可以使用，或者使用Latex编辑，识别准确率很高。 手写的公式拍照后也能识别，只要写得比较规范，那识别率也很高。 通过此方法对于较为大型的公式可以很方便的键入。连上外网后使用简直就是神器啊，太方便了，Justin 记录。 2018年12月07日 论文神器OCR公式-Inftyreader https://blog.csdn.net/qq894040717/article/details/84284889 将文件转化为图片后进行识别，貌似不能识别中文。但是应该好用，也是可以使用的。 使用了一下，发现识别率没有mathpix高。","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"SPI 总线协议与实现方法","slug":"2019/2019-10-11-SPI-FPGA-achieve","date":"2019-11-17T11:38:05.616Z","updated":"2019-11-18T09:00:11.475Z","comments":true,"path":"2019/11/2019/2019-10-11-SPI-FPGA-achieve.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-11-SPI-FPGA-achieve.html","excerpt":"SPI 总线协议与实现方法","text":"原创 首发于我的个人博客 www.upsame.com SPI 总线协议与实现方法 知识储备—参看链接： https://www.cnblogs.com/deng-tao/p/6004280.html https://blog.csdn.net/qq_42282258/article/details/81436882 正在使用的模式3，如图： 发送端在时钟下降沿改变数据 SCLK上升沿的阶段，数据保持稳定； 接收端在时钟上升沿接受数据（对线上的数据进行读取）。 目前已经在FPGA K7平台上实现并验证了SPI通信协议。 代码可参看FPGA实现SPI通信","categories":[{"name":"FPGA","slug":"FPGA","permalink":"https://upsame.coding.me/categories/FPGA/"}],"tags":[{"name":"FPGA","slug":"FPGA","permalink":"https://upsame.coding.me/tags/FPGA/"}]},{"title":"内网搭建公网可以访问的web服务器","slug":"2019/2019-10-01-web-local-net","date":"2019-11-17T11:38:05.603Z","updated":"2019-11-19T04:46:25.989Z","comments":true,"path":"2019/11/2019/2019-10-01-web-local-net.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-10-01-web-local-net.html","excerpt":"内网搭建公网可以访问的web服务器","text":"原创 内网服务器搭建 系统环境：windows 7 sp1 x86 局域网IP：192.168.0.203 配置环境：使用软件 phpstudy pro 小皮系统（包含了 php 环境和 Apache 等环境）； 使用开源私有云系统 KodExplorer 。 搭建方法： 打开 phpstudy pro，开启 Apache或Nginx 功能，使用默认端口80，最好设置为开机自启； 将KodExplorer解压缩，文件拷贝到D:/phpstudy_pro/www/文件夹下，在Phpstudy_pro软件中设置网站的物理路径为D:/phpstudy_pro/WWW/kodexplorer ，其他设置为默认不变。 在另一台局域网内主机使用浏览器访问192.168.0.203，可以登陆KodExplorer 系统。 Ps: 可以注意到phpstudy pro平台中还可以开启FTP服务、MySQL服务，需要设置为其他端口。 内网服务映射到公网 1、最简单的方式是将192.168.0.203对应的主机设置为DMZ主机，一般路由器都有这个功能。 2、路由器上进行端口映射，比第一种方式更安全且更灵活； 3、花生壳软件，首先在官网注册账号，然后在局域网某台电脑（比如192.168.0.203）上安装花生壳软件并运行后登陆花生壳官网注册的账号即可。不需要进行后续的映射配置。 本次使用的是方法1，将192.168.0.203设置DMZ主机 DMZ主机相当于拥有路由器的公网IP，因此访问公网IP就等于访问DMZ主机。而对于内网，DMZ主机的IP仍然是192.168.0.203 ，内网主机可以通过192.168.0.203访问DMZ，也可以通过公网IP访问DMZ。 直接使用IP访问 内网访问：http://192.168.0.203 或 外网访问：http://139.48.164.169 后者是路由器获得的公网IP。由于DMZ主机默认开放了所有端口，所以远程桌面、NAS文件夹分享都可以通过公网IP进行访问。 使用域名访问 两种方式， 一种是进行域名注册和DNS解析，将域名与绑定IP实现访问； 另一种是使用花生壳的壳域名在路由器或电脑端进行设置即可访问。 域名注册和DNS解析方式 腾讯云或者在新网上购买 yourname.xyz 的域名一年使用权，需要实名认证；截至到目前2019年10月这两个网站都在搞活动，域名可以几乎免费使用1年。 添加DNS解析，腾讯云或者新网平台上设置域名解析，将域名解析到公网IP上 。 使用域名搭建网站需要进行备案，目前没有备案。主要是指连接使用国内云服务器需要备案，内网搭建的服务器有自己的IP，不用备案。 花生壳的壳域名实现DDNS解析 通常路由器都可以进行DDNS的配置，如图是路由器 padawan 系统下的设置方法，其余路由器类似： 在路由器上设置的花生壳账号并登陆后，所以可以通过使用壳域名进行访问，如使用 http://openshare.zicp.vip 访问服务。 需要注意： 1、路由器的端口映射与DMZ主机不冲突，端口映射的优先级更高，即优先对映射的端口进行转发，然后剩余的（没有设置端口映射）的端口都自动转发到DMZ主机上。 2、当设置的端口不是浏览器默认的80端口时，访问需要加上对应的端口号 比如：139.48.164.169:8080 知识梳理 路由器端口交互图：","categories":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/categories/IT/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://upsame.coding.me/tags/IT/"}]},{"title":"Ubuntu18.04中使用KVM","slug":"2019/2019-09-21-Ubuntu-KVM","date":"2019-11-17T11:38:05.596Z","updated":"2019-11-19T04:46:18.032Z","comments":true,"path":"2019/11/2019/2019-09-21-Ubuntu-KVM.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-09-21-Ubuntu-KVM.html","excerpt":"Ubuntu18.04中使用KVM","text":"Ubuntu18.04中使用KVM 首先，ubuntu本身就是一个虚拟机，是我在教研室的Windows 10电脑使用VMware Workstation创建的虚拟机，分配的内存为4G和双处理器+双核（一共应该是4个线程）。 我在这个Ubuntu虚拟机中又使用KVM创建了一个虚拟机，安装Lite操作系统。 按照网上的教材走，最开始鼠标不同步的问题，似乎有解决方案，但是应用后没有直接生效，可能是要重启虚拟机吧。之后第二天我来的时候开启虚拟机重装KVM 虚拟机时鼠标问题就没有了。然后安装正常。 KVM分配了10GB空间，分配了Ubuntu的两个核，1G内存。安装后使用了59%，运行还比较流畅。 感觉界面比Ubuntu更好用呢，很有windows的风格。如下： 需要明确的是默认KVM中虚拟机和宿主机不能直接复制粘贴，需要一定的增强工具，但是不管了。 默认使用NAT方式联网，可以联网成功（打开了百度），网桥连接似乎有点问题，以后用到了再说吧。 所以要体验Lite linux，就可以再这个虚拟机下体验。（虚拟机中的虚拟机）。 对于KVM，基本的虚拟机功能都有，但是似乎没有VMware tool这样的好工具可以用。KVM只能运行于linux系统上，Virtualbox和VMware都可以跨平台。 ================================================================================= KVM是一个集成的Linux解决方案，我发现用它创建的虚拟机响应速度不错，唯一的缺陷是少针对桌面解决方案的功能，如3D图形加速，或GUI管理工具，所以用来搭服务器应该比较适用。","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://upsame.coding.me/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://upsame.coding.me/tags/Linux/"}]},{"title":"Markdown在不同平台下的使用感受","slug":"2019/2019-09-01-markdown","date":"2019-11-17T11:38:05.586Z","updated":"2019-11-19T04:46:09.846Z","comments":true,"path":"2019/11/2019/2019-09-01-markdown.html","link":"","permalink":"https://upsame.coding.me/2019/11/2019/2019-09-01-markdown.html","excerpt":"Markdown在不同平台下的使用感受","text":"@Markdown 简书 使用手机号码才能注册，无法使用邮箱注册账户这一点曾经让我不想注册这个应用；但是，现在的我就如李彦宏所说 &gt;&gt; 觉得似乎可以牺牲一些较少的隐私来换取便利： 注册简书后，我可以在手机上查看一些精彩的文章，或者发布一些文章，这样的操作方式对网站泄露了自己的手机号码，但是为了获得这个便捷的社交方式，我最终还是使用手机号注册了。 简书写博文 首先，简书平台适合文件的分享和公开发布，不适合于笔记和用来文件记录； 简书中，写文章可以选择富文本编辑器和Markdown编辑器，就是如同印象笔记的普通的编辑器和Markdown编辑器，编辑器功能支持不是很足，但是够用； 手机端和网页端均可以看到自己编辑的所有博客内容，包括未发布的和发布的内容。 编辑的文本可以实时保存，可以点击发布，但是一旦发布就是公开的，无法选择私密发布还是公开发布，一律是公开的。 自动保存而没有点击发布的文章视为私密文章，但是很容易点击到发布按钮（很多时候都有发布的按钮，只需要点击一下就直接发布了，没有任何思考的余地）； 从这一点看来，简书的文章私密性很小，不适合书写重要文件，写在简书上的文章要是可以公开发布的文章； 从这一点看，大部分的笔记、心得等不需要公开的文件应该写在云笔记中，或者离线存储在本地； 简书支持历史版本恢复，保存的版本很全面； 发布后的文章也是可以修改的。 简书上的博文 简书上的文章似乎很多没有使用markdown编辑，大多数人写一句话换一行（空一行），看起来效果也还是不错的。 所以写文章没有必要一定要使用markdown语言，只要觉得方便就可以了。 新浪博客 新浪博客不支持Markdown语法输入; 但是可以设置为私密博文和公开博文； CSDN 获得的下载积分貌似有下载期限—为一年，超过时间没有使用的积分会被清理； 购买的100积分的账户就被清理了，如今还剩下十几分； CSDN 博客含有两种编辑模式： HTML 编辑模式 列表内容 Markdown 编辑模式，markdown语法支持格式和马克飞象十分相似（基本兼容，换行不需要双空格），直接复制粘贴没有太大问题； 简书上也是这样的，可以现在马克飞象中编辑，然后直接复制到简书中，完全可以； 因为马克飞象中智能编辑和快捷建使用支持很好，所以建议先在马克飞象中编辑后再复制； 结合上面这一点，可以写出好的方便的文章； 综述 文章（或者笔记等）的公开分享可以选择简书或CSDN的博客平台； 较大文件的公开分享可以选择微云或百度云； 使用印象笔记国际板可以进行公开分享的方法确实可以，但是不专业，笔记的公开分享可以是文章，也可以是文件，压缩包等 但是由于受限于上传流量，所以如果没有会员的时候不适合大文件上传和分享； 国内版本只能分享给注册了账户的人（查看分享需要登陆）； 顺便说，坚果云付费版本也可以公开分享给所有人； 私密文件笔记：印象笔记、有道云笔记（有道云目前可以公开分享） 公开分享：如上综述； neitot","categories":[{"name":"生活故事","slug":"生活故事","permalink":"https://upsame.coding.me/categories/%E7%94%9F%E6%B4%BB%E6%95%85%E4%BA%8B/"}],"tags":[{"name":"Life","slug":"Life","permalink":"https://upsame.coding.me/tags/Life/"}]},{"title":"IPV6的学习理解","slug":"2019/2019-10-11-IPV6-learning","date":"2019-10-11T07:01:34.000Z","updated":"2019-11-19T04:46:32.722Z","comments":true,"path":"2019/10/2019/2019-10-11-IPV6-learning.html","link":"","permalink":"https://upsame.coding.me/2019/10/2019/2019-10-11-IPV6-learning.html","excerpt":"IPV6的学习理解","text":"原创 IPV6的学习理解 IPV6的学习理解 一、单播地址（Unicast IPv6 Addresses） 1、可聚合的全球单播地址（Aggregatable Global Unicast Addresses） 接口ID 2、链路本地地址（Link-Local Addresses） 站点本地地址（Site-Local Addresses） 3、唯一的本地IPv6单播地址（ULA，Unique Local IPv6 Unicast Address） 4、Unspecified Address 0:0:0:0:0:0:0:0/128 =&gt; ::/128 5、Loopback Address 0:0:0:0:0:0:0:1/128 =&gt; ::1/128 6、IPv4 Compatible Address ::192.168.30.1 =&gt; ::C0A8:1E01 二、多播IPv6地址（Multicast IPv6 Addresses） 三、设计小结 校园网络（教育网） 理解链路本地址与站点本地地址 IPv6地址格式简介以及常见的IP地址 一、单播地址（Unicast IPv6 Addresses） 1、可聚合的全球单播地址（Aggregatable Global Unicast Addresses） 可在全球范围内路由和到达的，相当于IPv4里面的global addresses。前三个bit是001，地址范围： 2000:: – 3FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF 例如：2000::1:2345:6789:abcd 又例如：3000::1:2345:6789:abcd 这个前缀中总共包含8192个/16的前缀。 其中： 2001::/16 目前实际用于IPV6因特网运作的前缀 2002::/16 为使用6-TO-4过渡机制的节点保留 3FFE::/16 早期的IPv6 6bone试验网单播地址（已经停用，网段被预留） 依据RFC3701，6bone的地址空间3FFE::/16已经于2006年6月6日停用。所有使用6bone前缀的网络必须过渡到使用由RIR分配的商用IPv6地址空间。CERNET自1998年11月获得6bone pTLA前缀3FFE:3200::/24以来，参与6bone的试验并为我国部署IPv6网络积累了经验。6bone地址停用后，原有的隧道为主的试验网如何成功过渡，是当前必须认真考虑的紧迫议题。 全局单播地址是最常用的IPv6单播地址。如果一个机构被分配了一块地址空间，并且只有一个地址前缀通过一个唯一的上游服务提供商接入IPv6 Internet，那么这方面并不需要特别的考虑。 但一个多接入的（Multihomed）网络可能需要考虑如何使用两个以上服务提供商所分配的地址空间。如何使用多个地址前缀取决于采用多接入的根本原因——有弹性的故障保护、负载均衡、实施策略路由，或者解决重新编址（renumbering）的过渡问题。IPv6已经改进了主机对多地址的支持，实现了主机默认地址的选择算法（参见RFC3484: Default Address Selection for IPv6）。多接入的主机如果含有两个不同前缀的全局地址，那么其源地址或者目的地址将按RFC3484所描述的那样去选择。 接口ID EUI-64格式：扩展惟一标识符 在IPV6中，无状态自动配置机制使用EUI-64格式来自动配置IPV6地址 所谓无状态自动配置是指在网络中没有DHCP服务器的情况下，允许节点自行配置IPV6地址的机制。 EUI-64的构造规则–根据接口的MAC地址再加上固定的前缀来生成一个IPV6的地址 工作原理：自动将48bit的以太网MAC地址扩展成64bit，再挂在一个64bit的前缀后面，组成一个IPV6地址 IPv6有三种不同类型的单播地址格式。地址（最后64位）的后半部分总是用于接口ID。系统的MAC地址是由48位并以十六进制表示。 MAC地址被认为是唯一分配全球范围内。接口ID采用此MAC地址的唯一性的优势。通过使用IEEE的扩展唯一标识符（EUI-64）格式的主机可以自动配置其接口ID。首先，主机会将其自己的MAC地址分为两个24位半。那么16位十六进制值0xFFFE的被夹到MAC地址的那两半，导出64位接口ID。 2、链路本地地址（Link-Local Addresses） 用于同一个链路上的相邻节点之间通信，相当于IPv4里面的169.254.0.0/16地址。Ipv6的路由器不会转发链路本地地址的数据包。前10个bit是1111 1110 10，由于最后是64bit的interface ID，所以它的前缀总是FE80::/64 （后面的零是标准中规定的） 例如：FE80::1 ipv6中：强制性自动分配，机通过MAC地址自动配置生成IPv6地址 ipv4中：DHCP分配失败会分配 只能用于网段内通信，路由器不会转发此类数据包 IPv6网络没有ARP，ARP是在二层网络确认每个MAC和IP的对应。该地址解决了这种问题，使得二层地址被三层网络唯一标识。 链路本地地址，是从MAC映射而的，很多回答是“完成邻居发现”，其实它就是个二层地址。之所以映射出来，是为了这些地址进行更好的管理和运用(如完成ARP功能)。不然直接使用MAC地址不就行了。 链路本地地址就是二层地址，因此它不会在三层网络设备如路由器之间通信。 IPv6本地链路地址生成方式 . 站点本地地址（Site-Local Addresses） （2019年的现在，这个早已被ULA取代，不再使用，这个网段被国际组织预留） 对于无法访问internet的本地网络，可以使用站点本地地址，这个相当于IPv4里面的private address（10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16）。它的前10个bit是1111 1110 11，它最后是16bit的Subnet ID和64bit的interface ID，所以它的前缀是FEC0::/48。 值得注意的是，在RFC3879中，最终决定放弃单播站点本地地址。放弃的理由是，由于其固有的二义性带来的单播站点本地地址的复杂性超过了它们可能带来的好处。它在RFC4193中被ULA取代。 3、唯一的本地IPv6单播地址（ULA，Unique Local IPv6 Unicast Address） RFC4193中标准化了一种用来在本地通信中取代单播站点本地地址的地址。ULA拥有固定前缀FD00::/8，后面跟一个被称为全局ID的40bit随机标识符。 用法上，ULA和IPv4的私有地址十分类似，但它具有近似的全局唯一性。 图 1.3 ULA在大网中的使用： 由于随机选择40位的Global ID，FC00::/7地址块内的大量ULA前缀必然是不聚类的。然而注意到在一个/48大小的ULA Global ID之下，仍然有16位的子网ID可供使用，适当分配ULA Global ID，尽量将逻辑上属于同一对象的网络规划到子网范畴以内，也是避免大网内部路由产生过多more-specifics的有效途径。 图1.3是ULA的地址结构示意图。其中，FC00::/7是ULA类型的前缀。作为一个统一前缀，有利于限制边界网关将这类地址的路由控制在一定范围之内。L是局部标志，置位表示后面的Global ID是各网络独自选择的；40位的Global ID由各网络独自随机选择，随机性保证一个ULA前缀在很大概率上是全局唯一的，因此，ULA并不要求部署它的管理员向一个全球机构注册使用某个前缀。在网络变换其服务提供商及对应的全局地址前缀时，ULA的地址编址体制可以保持不变，因此网络内部的运行将不因重编址而受到影响。 网络在部署ULA同时一般也部署全局地址，因此主机一般都同时分配有这样两种地址。默认地址选择算法能够正确选取源和目的地址，即如果源和目的主机都包含ULA地址时，则选择ULA地址。由于ULA前缀和一个全局的站点网络前缀都是48位的，因此管理员可以考虑对这二者采用一致的子网编址方案。 ULA使用中的一个典型问题是对IPv6组播的影响。IPv6默认地址选择算法会优先考虑ULA地址作为一个IPv6组播流的源地址。这个选择在IPv6组播流发往IPv6 Internet时是不正确的,因为ULA不是全局可路由的，将导致该组播会话的反向路径传递（RPF）在这个内部网络以外失效。 4、Unspecified Address 0:0:0:0:0:0:0:0/128 =&gt; ::/128 5、Loopback Address 0:0:0:0:0:0:0:1/128 =&gt; ::1/128 6、IPv4 Compatible Address ::192.168.30.1 =&gt; ::C0A8:1E01 二、多播IPv6地址（Multicast IPv6 Addresses） 前8个bit为1111 1111， 其中FF01::到FF0F::的多播地址是保留专用地址 FF01::1 节点本地范围所有节点多播地址 FF02::1 链路本地范围所有节点多播地址 FF01::2 节点本地范围所有路由器多播地址 FF02::2 链路本地范围所有路由器多播地址 FF05::2 站点本地范围所有路由器多播地址 三、设计小结 总的来说，地址分配可以依据某种特定的逻辑来分割已经从RIR获得的地址前缀。这些设计逻辑可以包含对以下因素的考察: 地理边界——同一地区的所有子网分配相同的前缀; 组织机构边界——同一机构或同一类型机构的联合体分配相同的前缀; 业务类别——为某些特定的业务预留地址前缀，如：VoIP、内容分发服务、无线接入、ADSL接入等等; 这些方面和IPv4的地址规划类似。然而设计者务必同时考虑到以下IPv6特定的问题： 前缀聚类； 网络的增长，特别是增长过程中是否还能保持聚类； 表1 IPv6的地址类型及其所占地址空间的比重 通过与RFC2373对比可知，RFC3513取消了为NSAP和IPX等保留的地址，将原来的保留地址全部划入了全球单播地址的行列，从而大大扩展了全球单播地址的空间。 校园网络（教育网） 1、校园网 WIFI认证后获得公网IP，IP范围属于教育网 2、办公场所有线web认证后也获得公网IP，IP范围属于教育网； 3、寝室web认证的也是公网IP，不属于教育网。 校园网 WIFI和办公区WEB认证登陆的账号分配了IPV6地址，可以使用Google和youtube服务，不知道是教育网的原因还是IPV6访问的原因。","categories":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://upsame.coding.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}],"tags":[{"name":"Computer-Net","slug":"Computer-Net","permalink":"https://upsame.coding.me/tags/Computer-Net/"}]},{"title":"Matlab中CVX工具箱使用","slug":"2019/2019-09-10-matlab-cvx","date":"2019-09-10T09:01:34.000Z","updated":"2019-11-19T04:45:33.683Z","comments":true,"path":"2019/09/2019/2019-09-10-matlab-cvx.html","link":"","permalink":"https://upsame.coding.me/2019/09/2019/2019-09-10-matlab-cvx.html","excerpt":"Matlab中CVX工具箱使用","text":"Matlab中CVX工具箱使用 CVX是一个凸优化解决工具，需要在Matlab上使用。 CVX让Matlab变成一个模型语言，可以使用Matlab的标准语法完成优化问题的求解。 安装 下载官方安装包，解压缩到任意路径，建议和Matlab放到一起。 打开Matlab，切换路径到CVX的存放路径，Matlab中运行cvx_setup命令即完成安装。 12cd C:\\personal\\cvxcvx_setup CVX 支持的解析器slover 该版本的cvx支持4种具有不同特性的解析器slover : SeDuMi、SDPT3、MOSEK 、Gurobi 所以使用cvx并不需要去额外下载一个slover，因为CVX的安装包中已经包含了 SeDuMi and SDPT3，这两个slover是免费许可的，默认启用的是SDPT3（The default solver is currently SDPT3）。 MOSEK 包含在CVX的教育许可证和商业许可证中，使用教育邮箱申请教育版许可，即可免费使用。 Gurobi and MOSEK 同样也可以搭载到CVX中去，但是你需要获得专业版许可证CVX Professional license才能使用这些功能。 (可以下载带有Gurobi and MOSEK的CVX包或单独下载Gurobi and MOSEK，之后安装专业版许可证) ，两个公司均有教育许可。 使用实例 1、官网实例，目标是解决如下优化问题： minimize∥Ax−b∥2subject toCx=d∥x∥∞≤e \\begin{array}{ll} \\text{minimize} &amp; \\|Ax-b\\|_2 \\\\ \\text{subject to} &amp; Cx=d \\\\ &amp; \\|x\\|_\\infty\\leq e \\end{array} minimizesubject to​∥Ax−b∥2​Cx=d∥x∥∞​≤e​ 在Matlab中使用以下代码即可完成优化求解， 12345678910m = 20; n = 10; p = 4;A = randn(m,n); b = randn(m,1);C = randn(p,n); d = randn(p,1); e = rand;cvx_begin variable x(n) minimize( norm( A * x - b, 2 ) ) %目标函数 subject to C * x == d %约束条件1 norm( x, Inf ) &lt;= e %约束条件2cvx_end 2、上面的自变量是单个向量，下面给出一个多个变量的求解方案； 还是一个凸函数最优化问题，主要问题如下： 首先要把需要解决的问题写成convex optimization的标准问题，即明确目标函数和条件约束。 max⁡g,tt s.t. ℜ{2gm−1HMll^g−gm−1HMll^gm−1H}≥t,∀l≠l^∥g∥2≤Mp\\begin{array}{l}{\\max _{\\mathbf{g}, t} t} \\\\ {\\text { s.t. } \\Re\\left\\{2 \\mathbf{g}_{m-1}^{H} \\mathbf{M}_{l \\hat{l}} \\mathbf{g}-\\mathbf{g}_{m-1}^{H} \\mathbf{M}_{l \\hat{l}} \\mathbf{g}_{m-1}^{H}\\right\\} \\geq t, \\forall l \\neq \\hat{l}} \\\\ {\\quad \\quad\\|\\mathbf{g}\\|^{2} \\leq M_p}\\end{array} maxg,t​t s.t. ℜ{2gm−1H​Mll^​g−gm−1H​Mll^​gm−1H​}≥t,∀l​=l^∥g∥2≤Mp​​ 其中，Mll^M_{l\\hat{l}}Mll^​为矩阵，MpM_pMp​为固定值，约束向量ggg的幅度。 123456789cvx_begin variable g(n,1) t maximize (t) %目标函数 subject to %约束条件 for i = 1:56 real(g_m'*M(i)*g - g_m'*M(i)*g_m) &gt;= t; end norm(g) &lt;= M;cvx_end 在Matlab中可以使用循环语句完成大量约束的枚举，更加方便。","categories":[{"name":"Matlab","slug":"Matlab","permalink":"https://upsame.coding.me/categories/Matlab/"}],"tags":[{"name":"MathModel","slug":"MathModel","permalink":"https://upsame.coding.me/tags/MathModel/"}]}]}